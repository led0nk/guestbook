# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build and Test
on:
  push:
    branches:
      - main 
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.22

      - name: Check out code
        uses: actions/checkout@v1

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4.0.0
        with:
          version: latest 
          args: # optional, default is 
          # golangci-lint working directory, default is project root
          working-directory: # optional
          # the token is used for fetching patch of a pull request to show only new issues
          github-token: ${{ github.token }}
          # if set to true and the action runs on a pull request - the action outputs only newly found issues
          only-new-issues: false 
          skip-cache: false 
          skip-pkg-cache: false 
          skip-build-cache: false 
          install-mode: binary 

  go-versions:
      name: Lookup Go versions
      runs-on: ubuntu-latest
      outputs:
        version: ${{ steps.versions.outputs.go-mod-version }}
        latest: ${{ steps.versions.outputs.latest }}
      steps:
        - uses: actions/checkout@v3
        - uses: arnested/go-version-action@v1
          id: versions
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: go-versions
    matrix:
      go-version: ["1.22.0"]
    steps:
      - uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.22 
          check-latest: true
      - name: Go test 1.21
        if: startsWith( matrix.go-version , needs.go-versions.outputs.version ) 
        run: echo ${{ fromJSON(needs.go-versions.outputs.version)}} 
      - name: Go test 1.22
        if: startsWith( matrix.go-version , needs.go-versions.outputs.latest ) 
        run: echo "test 1.22" 



  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.22

      - name: Check out code
        uses: actions/checkout@v1

      - name: Build
        run: make build
